https://leetcode.com/problems/sliding-window-maximum/description/

Given an array of integers and an integer K, return a vector containing  maximum for each and every contiguous subarray of size k.

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& input, int k) {
        deque<int> dq;
        vector<int> ans;
        for(int i = 0; i < input.size(); i++){
            while(!dq.empty() && dq.front() <= i-k){
                dq.pop_front();
            }
            while(!dq.empty() && input[dq.back()] < input[i]){
                dq.pop_back();
            }
            dq.push_back(i);
            if(i >= k-1){
                ans.push_back(input[dq.front()]);
            }
        }
        return ans;
    }
};
